package templates

import "imdawon/drawbridge/cmd/drawbridge/emissary"
import "fmt"

templ GetEmissaryClient(client *emissary.EmissaryClient, latestClientEvent *emissary.Event) {
    if client == nil {
        <p>Error getting device status</p>
    } else {
            <li id={ fmt.Sprintf("fleet-device-%s",client.ID) } class="fleet-device">
                if client.Revoked == 1 {
                    <span>{ client.Name } (Revoked)</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="36" height="36" fill="currentColor"><path d="M13 18V20H17V22H7V20H11V18H2.9918C2.44405 18 2 17.5511 2 16.9925V4.00748C2 3.45107 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44892 22 4.00748V16.9925C22 17.5489 21.5447 18 21.0082 18H13Z"></path></svg>
                    <span>Last Seen: { latestClientEvent.Timestamp }</span>
                    <span>IP Address: { latestClientEvent.ConnectionIP }</span>
                    <button value="Restore Access" hx-post={ fmt.Sprintf("emissary/post/client/%s/unrevoke_certificate", client.ID) } hx-target={ fmt.Sprintf("#fleet-device-%s",client.ID) } hx-swap="outerHTML" class="emissary-restore-btn">Restore Access</button>
                } else {
                    <span>{ client.Name }</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="36" height="36" fill="currentColor"><path d="M13 18V20H17V22H7V20H11V18H2.9918C2.44405 18 2 17.5511 2 16.9925V4.00748C2 3.45107 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44892 22 4.00748V16.9925C22 17.5489 21.5447 18 21.0082 18H13Z"></path></svg>
                    <span>Last Seen: { latestClientEvent.Timestamp }</span>
                    <span>IP Address: { latestClientEvent.ConnectionIP }</span>
                    <button value="Revoke Access" hx-post={ fmt.Sprintf("emissary/post/client/%s/revoke_certificate", client.ID) } hx-target={ fmt.Sprintf("#fleet-device-%s",client.ID) } hx-swap="outerHTML" class="emissary-revoke-btn">Revoke Access</button>
                }
            </li>
    }
}